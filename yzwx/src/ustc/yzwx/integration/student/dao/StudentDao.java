package ustc.yzwx.integration.student.dao;

import java.util.List;

import org.apache.ibatis.annotations.Param;

import ustc.yzwx.common.integration.dao.annotation.DaoMaster;
import ustc.yzwx.integration.student.dao.seachObj.StudentSeachObj;
import ustc.yzwx.presentation.student.form.Student;

@DaoMaster
public interface StudentDao {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wx_student
     *
     * @mbggenerated Tue Feb 25 17:50:21 CST 2014
     */
    int deleteByPrimaryKey(int id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wx_student
     *
     * @mbggenerated Tue Feb 25 17:50:21 CST 2014
     */
    int insert(Student record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wx_student
     *
     * @mbggenerated Tue Feb 25 17:50:21 CST 2014
     */
    int insertSelective(Student record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wx_student
     *
     * @mbggenerated Tue Feb 25 17:50:21 CST 2014
     */
    Student selectByPrimaryKey(int id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wx_student
     *
     * @mbggenerated Tue Feb 25 17:50:21 CST 2014
     */
    int updateByPrimaryKeySelective(Student record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wx_student
     *
     * @mbggenerated Tue Feb 25 17:50:21 CST 2014
     */
    int updateByPrimaryKeyWithBLOBs(Student record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wx_student
     *
     * @mbggenerated Tue Feb 25 17:50:21 CST 2014
     */
    int updateByPrimaryKey(Student record);
    
    /**
     * 根据活动ID 查询该活动下的所有考生  若id为空  则查询全部考生
     * @param activityId 活动ID
     * @return 考生列表
     */
    public List<Student> findByActivity(@Param("activityId") String activityId,@Param("offset") int offset, @Param("limit") int limit);
    
    /**
     * 根据活动id 查询该活动下考生数量，若为空，查询所有考生数量
     * @param activityId  活动id
     * @return  考生数
     */
    public int totalCountByActivity(@Param("activityId") String activityId);
    
    public  List<Student> findByParams(StudentSeachObj obj);
    
    public int countByParams(StudentSeachObj obj);
}