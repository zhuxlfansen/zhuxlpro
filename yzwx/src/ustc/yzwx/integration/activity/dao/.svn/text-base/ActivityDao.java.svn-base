package ustc.yzwx.integration.activity.dao;

import java.util.Date;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;

import ustc.yzwx.common.integration.dao.annotation.DaoMaster;
import ustc.yzwx.presentation.activity.form.Activity;
import ustc.yzwx.presentation.activity.form.ActivityBoardingInfo;

@DaoMaster
public interface ActivityDao {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wx_activity
     *
     * @mbggenerated Wed Feb 19 09:53:20 CST 2014
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wx_activity
     *
     * @mbggenerated Wed Feb 19 09:53:20 CST 2014
     */
    int insert(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wx_activity
     *
     * @mbggenerated Wed Feb 19 09:53:20 CST 2014
     */
    int insertSelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wx_activity
     *
     * @mbggenerated Wed Feb 19 09:53:20 CST 2014
     */
    Activity selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wx_activity
     *
     * @mbggenerated Wed Feb 19 09:53:20 CST 2014
     */
    int updateByPrimaryKeySelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table wx_activity
     *
     * @mbggenerated Wed Feb 19 09:53:20 CST 2014
     */
    int updateByPrimaryKey(Activity record);
    /**
     * 查询所有活动
     * @return 活动集合
     */
    public List<Activity> findAll(Map<String,Object> map);
    /**
     * 查询所有活动（分页）
     * @param offset 起始页数
     * @param limit  每页显示数
     * @return 活动集合
     */
    public List<Activity> findall(@Param("name") String name,@Param("type") String type,@Param("offset") int offset, @Param("limit") int limit);
    /**
     * 查询所有活动数目
     * @return 活动数目
     */
    public int totalCount(@Param("name") String name);
    /**
     * 查询最大id
     * @return
     */
    public int maxId();
    /**
     * 根据活动code查询活动
     * @param code 活动code
     * @return
     */
    public Activity findByCode(@Param("code")String code);
    
    public int findCountByName(@Param("name") String name,@Param("id") Integer id);
    
    /**
     * 插入二维码ticket
     * @param map
     * @return
     */
    public int insertQRCode(Map<String,Object> map);
    
    public int deleteQRCode(Integer sceneId);
    
    /**
     * 根据场景ID获取ticket
     * @param sceneId
     * @return
     */
    public String selectQRCodeBySceneId(Integer sceneId);
    
    /**
     * 插入乘车路线
     * @param map
     * @return
     */
    public int insertBoardingInfo(ActivityBoardingInfo boardingInfo);
    /**
     * 根据活动ID获取乘车路线
     * @param activityId
     * @return
     */
    public List<ActivityBoardingInfo> getBoardingsByActivityId(Integer activityId);
    
    /**
     * 根据ID删除乘车路线
     * @param id
     * @return
     */
    public int delBoardingById(Integer id);
    /**
     * 修改乘车路线
     * @param boardingInfo
     * @return
     */
    public int updBoardingById(ActivityBoardingInfo boardingInfo);
    
    /**
     * 统计乘车线路人数
     * @param map
     * @return
     */
    public int countTotalStu(ActivityBoardingInfo boardingInfo);
    
    
    public List<Activity> getOneYearActivityList();
}